<launch>
    <!-- BEGIN: Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames --> 
    <!-- Static transforms -->
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.007 0 0.14 0 0 0 base_link linklidar 30" />
    <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0 0 0 0 world base_link 30" />

    <!-- BEGIN: Wheel Odometry Publisher -->
    <!-- Subscribe: /right_ticks, /left_ticks, /initial_2d -->
    <!-- Publish: /odom_data_euler, /odom_data_quat -->
    <node name="ekf_odom_pub_for_mapping" pkg="localization_data_pub" type="ekf_odom_pub_for_mapping" output="screen"/>
    <!-- END: Wheel Odometry Publisher -->

    <!-- Map File -->
    <arg name="map_file" default="$(find navstack_pub)/maps/map.yaml"/>

    <!-- Map Server -->
    <!-- Publish: /map, /map_metadata -->
    <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />

    
    <!-- IMU and LIDAR -->
    <!-- <include file="$(find robot_mapping)/launch/rplidar_a1.launch"/> --> 

    <!-- AMCL for Localization -->
    <include file="$(find robot_amcl)/launch/amcl.launch"/>       

    <!-- Extended Kalman Filter from robot_pose_ekf Node -->
    <remap from="odom" to="odom_data_quat" />
    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
        <param name="output_frame" value="odom"/>
        <param name="base_footprint_frame" value="world"/>
        <param name="freq" value="30.0"/>
        <param name="sensor_timeout" value="1.0"/>
        <param name="odom_used" value="true"/>
        <param name="imu_used" value="false"/>
        <param name="vo_used" value="false"/>
        <param name="gps_used" value="false"/>
        <param name="debug" value="false"/>
        <param name="self_diagnose" value="false"/>
    </node>

    <!-- ROBOT Model -->
    <include file="$(find roboter)/launch/display.launch"/>

    <!-- Initial Pose and Goal Publisher -->
    <node pkg="localization_data_pub" type="rviz_click_to_2d" name="rviz_click_to_2d" /> 
    
    <!-- Set initial pose using .py file -->
    <node name="pub_initpose_node" pkg="navstack_pub" type="setInitialPose.py" output="screen">
        <param name="x" value="0.0"/>
        <param name="y" value="0.0"/>
        <param name="yaw" value="0.0"/> 
    </node>

    <!-- Move Base Launch -->
    <include file="$(find navstack_pub)/launch/move_base_turtlebot3.launch"/> 
</launch>
